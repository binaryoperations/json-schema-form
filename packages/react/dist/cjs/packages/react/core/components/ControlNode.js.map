{"version":3,"file":"ControlNode.js","sources":["../../../../../../core/components/ControlNode.tsx"],"sourcesContent":["import invariant from '@binaryoperations/json-forms-internals/invariant';\nimport { ComponentType } from 'react';\nimport { useCallback } from 'react';\nimport { ChangeEvent } from 'react';\n\nimport { ControlContext } from '../context/ControlContext';\nimport { useControl, useControlValue } from '../hooks';\nimport { useMaybeDevValue } from '../hooks/useMaybeDevValue';\nimport { useControlNode } from '../hooks/useRenderer';\nimport { withErrorBoundary } from './ErrorBoundary';\n\nconst Unhandled = () => {\n  const control = useControl((control) => control);\n  const [value] = useControlValue(control.path);\n\n  return useMaybeDevValue(\n    () => (\n      <div style={{ backgroundColor: '#e5e5e5', wordBreak: 'break-all' }}>\n        value: {JSON.stringify(value)} <br />\n        scope: {JSON.stringify(control.path)} <br />\n      </div>\n    ),\n    () => null\n  );\n};\n\nconst withControlContext = <Props extends { id: string }>(\n  Component: ComponentType<Props>\n) => {\n  return function withControlContext(props: Props) {\n    return (\n      <ControlContext.Provider value={props.id}>\n        <Component {...props} />\n      </ControlContext.Provider>\n    );\n  };\n};\n\nexport const ControlNode = withControlContext(\n  withErrorBoundary(function ControlNode(props: { id: string }) {\n    const control = useControl((control) => control);\n\n    const { Control, getValueFromEvent } = invariant(\n      useControlNode(props.id),\n      `Cannot find a relevant control for id: ${props.id}`\n    );\n\n    const path = control.path;\n    const [value, setValue] = useControlValue(path);\n\n    const handleSetValue = useCallback(\n      (e: ChangeEvent) => {\n        setValue(getValueFromEvent(e));\n      },\n      [getValueFromEvent, setValue]\n    );\n\n    return (\n      <Control\n        {...control.options}\n        label={path}\n        value={(value ?? '') as any}\n        onChange={handleSetValue}\n      />\n    );\n  }, Unhandled)\n);\n"],"names":["Unhandled","control","useControl","value","useControlValue","useMaybeDevValue","_jsxs","_jsx","withControlContext","Component","props","ControlContext","ControlNode","withErrorBoundary","Control","getValueFromEvent","invariant","useControlNode","path","setValue","handleSetValue","useCallback","e"],"mappings":"4hBAWMA,EAAY,IAAK,CACrB,MAAMC,EAAUC,EAAA,WAAYD,GAAYA,CAAO,EACzC,CAACE,CAAK,EAAIC,EAAA,gBAAgBH,EAAQ,IAAI,EAE5C,OAAOI,EAAAA,iBACL,IACEC,yBAAA,MAAA,CAAK,MAAO,CAAE,gBAAiB,UAAW,UAAW,WAAA,EAAa,SAAA,CAAA,UACxD,KAAK,UAAUH,CAAK,EAAC,IAAEI,EAAAA,kBAAAA,aACvB,UAAA,KAAK,UAAUN,EAAQ,IAAI,EAAG,IAAAM,EAAAA,kBAAAA,IAAA,KAAA,CAAA,CAAA,CAAM,IAGhD,IAAM,IAAI,CAEd,EAEMC,EACJC,GAEO,SAA4BC,EAAY,CAC7C,OACEH,EAAC,kBAAA,IAAAI,EAAA,eAAe,SAAQ,CAAC,MAAOD,EAAM,GAAE,SACtCH,EAAAA,kBAAAA,IAACE,EAAS,CAAA,GAAKC,CAAS,CAAA,CAAA,CAAA,CAAA,EAMnBE,EAAcJ,EACzBK,EAAAA,kBAAkB,SAAqBH,EAAqB,CAC1D,MAAMT,EAAUC,EAAA,WAAYD,GAAYA,CAAO,EAEzC,CAAE,QAAAa,EAAS,kBAAAC,GAAsBC,EACrCC,EAAAA,eAAeP,EAAM,EAAE,EACvB,0CAA0CA,EAAM,EAAE,EAAE,EAGhDQ,EAAOjB,EAAQ,KACf,CAACE,EAAOgB,CAAQ,EAAIf,kBAAgBc,CAAI,EAExCE,EAAiBC,2BACpBC,GAAkB,CACRH,EAAAJ,EAAkBO,CAAC,CAAC,CAAA,EAE/B,CAACP,EAAmBI,CAAQ,CAAC,EAG/B,OACEZ,EAAC,kBAAA,IAAAO,EACK,CAAA,GAAAb,EAAQ,QACZ,MAAOiB,EACP,MAAQf,GAAS,GACjB,SAAUiB,CACV,CAAA,CAEN,EAAGpB,CAAS,CAAC"}