import{j as d}from"../../../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js";import{shallowCompare as p}from"../../../internals/object.js";import{r as s}from"../../../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js";import{w as h}from"../../../../node_modules/.pnpm/use-sync-external-store@1.2.2_react@18.3.1/node_modules/use-sync-external-store/with-selector.js";import{useInvariantContext as x}from"../hooks/useInvariantContext.js";import{useLatest as R}from"../hooks/useLatest.js";import{usePrevious as w}from"../hooks/usePrevious.js";const S=(t,n,u=!1)=>{const e=s.useRef(t),o=s.useRef(u),r=s.useRef(!1),i=R(n),l=s.useCallback(()=>e.current,[e]),f=s.useRef(new Set),c=s.useCallback(a=>{e.current={...e.current,...a(e.current)},!r.current&&i.current?i.current(e.current):f.current.forEach(b=>b()),r.current=!1},[e,i]),m=s.useCallback(a=>(f.current.add(a),()=>f.current.delete(a)),[]);return s.useEffect(()=>{o.current&&(r.current=!0,c(()=>t))},[c,e,t]),w(t).current!==t&&o.current&&(e.current={...e.current,...t}),s.useMemo(()=>({get:l,set:c,subscribe:m,store:e}),[l,c,m])};let j=0;const q=t=>{const{watch:n=!1,debugName:u=`fast-context-${++j}`}=typeof t!="object"?{watch:t}:t,e=s.createContext(null);return e.displayName=u,{useStoreRef:E(e),Provider:v(e,n),useContext:(o,r=p)=>C(e,o,r),useContextValue:(o,r=p)=>y(e,o,r),Context:e}},v=(t,n)=>Object.assign(s.memo(function({value:e,children:o,onChange:r}){return d.jsx(t.Provider,{value:S(e,r,n),children:o})}),{displayName:t.displayName}),E=t=>()=>x(t,"Fast Context requires the value to be wrapped in a Provider with a value."),C=(t,n,u=Object.is)=>{const e=x(t,"Store not found");return[h.useSyncExternalStoreWithSelector(e.subscribe,()=>e.get(),void 0,r=>n(r),u),e.set]},y=(t,n,u=Object.is)=>C(t,n,u)[0];export{q as createFastContext,v as createProvider,E as createUseRefContext,C as useFastContextStore,y as useStoreValue};
//# sourceMappingURL=index.js.map
