{"version":3,"file":"LayoutNode.js","sources":["../../../../../../core/components/LayoutNode.tsx"],"sourcesContent":["import { shallowCompare } from '@binaryoperations/json-forms-internals/object';\nimport { memo } from 'react';\n\nimport { useStore } from '../hooks';\nimport { useLayoutNode } from '../hooks/useRenderer';\nimport { ControlNode } from './ControlNode';\n\nexport const LayoutNode = function LayoutNode(props: { id: string }) {\n  const nodeType = useStore((store) => store.uiContext.getNodeType(props.id));\n  const LayoutNode = useLayoutNode(nodeType);\n\n  return <LayoutNode id={props.id} />;\n};\n\nexport const LayoutChildren = memo(function LayoutChildren(props: {\n  id: string;\n}) {\n  const isControl = useStore((store) => store.uiContext.isControl(props.id));\n  const nodes = useStore((store) => {\n    if (isControl) return [];\n    return store.uiContext.getChildren(props.id);\n  }, shallowCompare);\n\n  if (isControl) {\n    return <ControlNode id={props.id} />;\n  }\n\n  const renderedNodes = nodes.map((node) => {\n    return <LayoutNode key={node} id={node} />;\n  });\n\n  return <>{renderedNodes}</>;\n});\n"],"names":["LayoutNode","props","nodeType","useStore","store","useLayoutNode","_jsx","LayoutChildren","memo","isControl","nodes","shallowCompare","ControlNode","renderedNodes","node","_Fragment"],"mappings":"o5BAOa,MAAAA,EAAa,SAAoBC,EAAqB,CAC3D,MAAAC,EAAWC,EAAUC,GAAUA,EAAM,UAAU,YAAYH,EAAM,EAAE,CAAC,EACpED,EAAaK,EAAcH,CAAQ,EAEzC,OAAOI,EAAAA,IAACN,EAAW,CAAA,GAAIC,EAAM,GAAE,CACjC,EAEaM,EAAiBC,EAAA,KAAK,SAAwBP,EAE1D,CACO,MAAAQ,EAAYN,EAAUC,GAAUA,EAAM,UAAU,UAAUH,EAAM,EAAE,CAAC,EACnES,EAAQP,EAAUC,GAClBK,EAAkB,GACfL,EAAM,UAAU,YAAYH,EAAM,EAAE,EAC1CU,CAAc,EAEjB,GAAIF,EACF,OAAOH,EAAAA,IAACM,EAAY,CAAA,GAAIX,EAAM,GAAE,EAGlC,MAAMY,EAAgBH,EAAM,IAAKI,GACxBR,EAAAA,IAACN,EAAsB,CAAA,GAAIc,CAAA,EAAVA,CAAI,CAC7B,EAED,OAAOR,EAAA,IAAAS,EAAA,SAAA,CAAA,SAAGF,CAAa,CAAA,CACzB,CAAC"}